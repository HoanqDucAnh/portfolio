name: Code Quality

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # Run weekly on Sundays at 00:00 UTC
    - cron: '0 0 * * 0'

jobs:
  code-analysis:
    name: Code Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint with output
      run: |
        npx eslint . --ext .ts,.tsx,.js,.jsx --format json --output-file eslint-report.json || true
        npx eslint . --ext .ts,.tsx,.js,.jsx || true

    - name: Generate TypeScript report
      run: |
        npx tsc --noEmit --pretty false > typescript-report.txt 2>&1 || true

    - name: Check bundle size
      run: |
        npm run build
        du -sh .next/ > build-size.txt
        echo "Build size:" && cat build-size.txt

    - name: Upload code quality reports
      uses: actions/upload-artifact@v4
      with:
        name: code-quality-reports-${{ github.sha }}
        path: |
          eslint-report.json
          typescript-report.txt
          build-size.txt
        retention-days: 30

    - name: Comment PR with quality report
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          let buildSize = '';
          try {
            buildSize = fs.readFileSync('build-size.txt', 'utf8').trim();
          } catch (e) {
            buildSize = 'Unable to determine build size';
          }

          const commentBody = `
          ## 📊 Code Quality Report
          
          **Build Information:**
          - 📦 Build Size: \`${buildSize}\`
          - 🔍 Commit: ${{ github.sha }}
          
          **Quality Checks:**
          - ✅ ESLint analysis completed
          - ✅ TypeScript type checking completed
          - ✅ Build verification passed
          
          📁 Detailed reports are available in the workflow artifacts.
          `;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: commentBody
          });

  dependency-analysis:
    name: Dependency Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Analyze bundle
      run: |
        npx next build
        echo "Dependencies analysis completed"

    - name: Check for unused dependencies
      run: |
        npx depcheck --json > depcheck-report.json || true
        echo "Unused dependency check completed"

    - name: Upload dependency reports
      uses: actions/upload-artifact@v4
      with:
        name: dependency-analysis-${{ github.sha }}
        path: |
          depcheck-report.json
        retention-days: 7 