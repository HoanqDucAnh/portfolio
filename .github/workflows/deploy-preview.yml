name: Deploy Preview

on:
  pull_request:
    branches: [ main, master ]
    types: [opened, synchronize, reopened]

jobs:
  preview-build:
    name: Build Preview
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build for preview
      run: npm run build
      env:
        NODE_ENV: production

    - name: Upload preview build
      uses: actions/upload-artifact@v4
      with:
        name: preview-build-${{ github.event.pull_request.number }}
        path: |
          .next/
          out/
        retention-days: 7

    - name: Comment on PR
      uses: actions/github-script@v7
      with:
        script: |
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });

          const botComment = comments.find(comment => 
            comment.user.type === 'Bot' && 
            comment.body.includes('ðŸš€ Preview Build')
          );

          const commentBody = `
          ## ðŸš€ Preview Build Complete!
          
          The preview build for this PR has been generated successfully.
          
          **Build Details:**
          - ðŸ“¦ Build Artifact: \`preview-build-${{ github.event.pull_request.number }}\`
          - ðŸ”— Commit: ${{ github.sha }}
          - ðŸŒ¿ Branch: ${{ github.head_ref }}
          
          You can download the build artifacts from the Actions tab to test locally.
          `;

          if (botComment) {
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body: commentBody
            });
          } else {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: commentBody
            });
          } 